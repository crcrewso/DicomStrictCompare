using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace DSClibrary.Parsers.Tests
{
    [TestClass()]
    public class ParseSNCTests
    {
        string? header;
        string data;


        [TestInitialize()]
        public void testSetup()
        {
            // this is real data and header is for reference
            header = "TYPE\tUPDATE#\tTIMETIC\tPULSES\tSTATUS\tX1\tX2\tX3\tX4\tX5\tX6\tX7\tX8\tX9\tX10\tX11\tX12\tX13\tX14\tX15\tX16\tX17\tX18\tX19\tX20\tX21\tX22\tX23\tX24\tX25\tX26\tX27\tX28\tX29\tX30\tX31\tX33\tX35\tX36\tX37\tX38\tX39\tX40\tX41\tX42\tX43\tX44\tX45\tX46\tX47\tX48\tX49\tX50\tX51\tX52\tX53\tX54\tX55\tX56\tX57\tX58\tX59\tX60\tX61\tX62\tX63\tX64\tX65\tY1\tY2\tY3\tY4\tY5\tY6\tY7\tY8\tY9\tY10\tY11\tY12\tY13\tY14\tY15\tY16\tY17\tY18\tY19\tY20\tY21\tY22\tY23\tY24\tY25\tY26\tY27\tY28\tY29\tY30\tY31\tY32\tY33\tY34\tY35\tY36\tY37\tY38\tY39\tY40\tY41\tY42\tY43\tY44\tY45\tY46\tY47\tY48\tY49\tY50\tY51\tY52\tY53\tY54\tY55\tY56\tY57\tY58\tY59\tY60\tY61\tY62\tY63\tY64\tY65\tPD1\tPD2\tPD3\tPD4\tPD5\tPD6\tPD7\tPD8\tPD9\tPD10\tPD11\tPD12\tPD13\tPD14\tPD15\tPD16\tPD17\tPD18\tPD19\tPD20\tPD21\tPD22\tPD23\tPD24\tPD25\tPD26\tPD27\tPD28\tPD29\tPD30\tPD31\tPD33\tPD35\tPD36\tPD37\tPD38\tPD39\tPD40\tPD41\tPD42\tPD43\tPD44\tPD45\tPD46\tPD47\tPD48\tPD49\tPD50\tPD51\tPD52\tPD53\tPD54\tPD55\tPD56\tPD57\tPD58\tPD59\tPD60\tPD61\tPD62\tPD63\tPD64\tPD65\tND1\tND2\tND3\tND4\tND5\tND6\tND7\tND8\tND9\tND10\tND11\tND12\tND13\tND14\tND15\tND16\tND17\tND18\tND19\tND20\tND21\tND22\tND23\tND24\tND25\tND26\tND27\tND28\tND29\tND30\tND31\tND33\tND35\tND36\tND37\tND38\tND39\tND40\tND41\tND42\tND43\tND44\tND45\tND46\tND47\tND48\tND49\tND50\tND51\tND52\tND53\tND54\tND55\tND56\tND57\tND58\tND59\tND60\tND61\tND62\tND63\tND64\tND65\tRef\tZ1\tA1\tA2\tA3\tA4\tA5\tPressure\tUltraSonic\tTemperature\r\n";
            data = "Data:\t48\t6250686\t1080\t69\t5385\t4061\t3150\t7680\t8598\t11994\t12124\t17077\t25978\t66631\t204711\t613570\t1366816\t1782622\t1905312\t1998316\t1980581\t1988985\t1944845\t2060850\t2086235\t2067424\t2080246\t2083452\t2022724\t2085878\t2009264\t2044704\t2085420\t2138777\t2053626\t2110243\t2064884\t2164052\t2016512\t2071661\t2041416\t2032024\t1941589\t1942869\t2018667\t1978697\t2037056\t2037169\t2004822\t1945483\t1927327\t1920476\t1834760\t1690371\t1148038\t477038\t151801\t51349\t21090\t15309\t10430\t8179\t6566\t7889\t3908\t3594\t5172\t4216\t7955\t9032\t8384\t8184\t11095\t8697\t11392\t20215\t55595\t180146\t553437\t1288031\t1745775\t1918250\t1952686\t2017484\t1972889\t2026010\t1989586\t2057784\t2029503\t2022711\t2047987\t2063134\t2078823\t2059556\t2059048\t2083794\t2045348\t2155121\t2170650\t2110243\t2149420\t2149525\t2104408\t2085905\t2086363\t1974639\t2055565\t2006781\t1945808\t2009411\t1973064\t2029618\t1896333\t1959710\t1990631\t1935972\t1960671\t1837560\t1753150\t1281715\t567943\t181811\t60875\t28701\t17609\t13313\t11904\t7958\t5345\t6539\t5645\t1967\t97\t1149\t3555\t3852\t2353\t2409\t1874\t3268\t4255\t8958\t24636\t133959\t709743\t1530694\t1770374\t1898228\t1942213\t1996311\t2019869\t1993875\t2002857\t1982074\t2049004\t2036424\t2072403\t2041356\t2065065\t2117864\t2134517\t2084307\t2086418\t2110243\t2131367\t2076395\t2009738\t1999441\t2100636\t2079613\t2038205\t2050587\t2008450\t2056482\t1970582\t2035563\t1996091\t1979380\t1878577\t1869131\t1791863\t1509304\t638187\t119675\t20544\t10073\t5958\t3521\t3272\t3531\t2128\t3265\t1193\t1396\t1379\t2449\t3963\t2262\t4523\t1170\t2567\t2866\t2627\t4439\t8190\t25112\t145512\t729790\t1547014\t1802682\t1903957\t1916681\t1978126\t1956918\t1999420\t2011424\t2038649\t2038650\t2036766\t2057531\t2086211\t2067554\t2063587\t2059531\t2091126\t2124889\t2110243\t2070659\t2051193\t2054308\t2041204\t2072693\t2020082\t2012968\t2027025\t2060188\t1987024\t2044877\t1993384\t1975065\t1968889\t1912909\t1908248\t1719667\t1479417\t627049\t112801\t22186\t5931\t2668\t3508\t3888\t2538\t3610\t1738\t502\t816\t4299\t1654\t34922\t973414\t1080932\t1831685\t1074489\t1121667\t1926\t0\t20.96980197\r\n";

        }

        [TestMethod()]
        public void CaxCountIsCenterIC()
        {
            int caxData = 2110243;
            SNCICProfiles profiles = new SNCICProfiles(data);
            Assert.AreEqual(caxData, profiles.CaxCount);

        }

        /// <summary>
        /// Asserts that the Normalized center of the X axis is 1, which is the expected normalization behavior. 
        /// </summary>
        [TestMethod()]
        public void ProfileNormalizedToCax()
        {
            SNCICProfiles profiles = new SNCICProfiles(data);
            int xCenterPosition = profiles.XAxis.Length;
            xCenterPosition = (xCenterPosition / 2);
            double xCenter = profiles.XAxis[xCenterPosition];
            Assert.AreEqual(1, xCenter);
        }

    }
}